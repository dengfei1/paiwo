// pages/run/run.js
//var wxCharts = require('../../utils/wxcharts.js');
var app = new getApp();
var util = require('../../utils/util.js');
import * as echarts from '../../ec-canvas/echarts';

//出水温度
var csTemp = [];
var sxTemp = [];
var hsTemp = [];
var hjTemp = [];
var tempTime = [];
var sxhs=[];
var chart;
function initChart(canvas, width, height) {
   chart = echarts.init(canvas, null, {
    width: width,
    height: height
  });
  canvas.setChart(chart);
  return chart;
}

Page({
  /**
   * 页面的初始数据
   */
  data: {
    scope:'',
    date: '',
    winHeight: "", //窗口高度
    currentData: 1,
    isHided: false,
    isHided1: false,
    isHided2: false,
    isHided3: false,
    // sxTemp:'',//水箱温度
    // hsTemp:'',//回水温度
    // csTemp:'',//出水温度
    // hjTemp:'',//环境温度
    // tempTime:'',
    chartList:'',
    power: ['开机', '关机'],
    set: ['加热', '保温'],
    index: 0,
    a: '223',
    inx: 0,
    time: ['12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01'],
    time1: ['12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01', '12:01'],
    key: 0,
    key1: ['自动', '自动', '自动', '自动', '自动', '自动', '自动', '自动', '自动', '自动', '自动', '自动', '自动', '自动'],
    key2: [25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
    key3: [55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],
    key4: 0,
    key5: 0,
    isHide: false,
    item: 0,
    onTime: [],
    tem: ["25", "26"],
    water: ["55", "56", '57'],
    mode: ["自动", "制冷", '制热', '供暖'],
    dataArr: '',
    addTime: [{
      mode: ["自动", "制冷", '制热', '供暖'],
      water: ["55", "56", '57'],
      tem: ["25", "26"],
      time: '12:01',
      time1: '12:01',
      icon: 'icon-yuandianzhong',

    }, ],
    uuid: '',
    num: 0,
    setName: '',
    ec: {
      onInit: initChart
    },
    // 设备选择
    deviceArr: [],
    // 参数设置
    bitData:[{code:'switch',scope:0},{code:'L1',scope:0},{code:'L3',scope:''}]

  },
  // 出水温度
  test(){
    console.log(111)
    var option = {
      title: {
        // text: '测试下面legend的红色区域不应被裁剪',
        // left: 'center'
        textStyle: {
          fontSize: 12,
          fontWeight: 'none',
          color: '#333'                             // 主标题文字颜色
        },
      },
      color: ["#37A2DA", "#67E0E3", "#9FE6B8"],
      legend: {
        data: ['出水温度', '环境温度', '水箱温度'],
        top: 'auto',
        left: 'center',
        // backgroundColor: 'red',
        z: 100
      },
      grid: {
        containLabel: true
      },
      tooltip: {
        show: true,
        trigger: 'axis'
      },
      xAxis: {
        type: 'category',
        boundaryGap: false,
        data: tempTime,
        nameLocation: 'end',//坐标轴名称显示位置。
        axisLabel: {//坐标轴刻度标签的相关设置。
          interval: 'auto',
          rotate: "30"
        },
        fontsize: 10,
        axisTick: {
          alignWithLabel: true
        }
        // show: false
      },
      dataZoom: [{
        type: 'slider',
        xAxisIndex: 0,
        filterMode: 'empty',
        height: 10,
        handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',
        handleSize: '60%',
        handleStyle: {
          color: '#fff',
          shadowBlur: 3,
          shadowColor: 'rgba(0, 0, 0, 0.6)',
          shadowOffsetX: 1,
          shadowOffsetY: 1
        },
        bottom: "20rpx",
        //top: "94%"
      }],
      yAxis: {
        x: 'center',
        type: 'value',
        nameGap: 30,
        splitLine: {
          lineStyle: {
            type: 'dashed'
          }
        },
        // show: false
      },
      series: [{
        name: '出水温度',
        type: 'line',
        smooth: true,
        data: csTemp,
        show:true,
        normal:{
          fontSize:14,
          rich:{}
        },
        },
        {
          name: '环境温度',
          type: 'line',
          smooth: true,
          data: hjTemp,
          normal: {
            fontSize: 14,
            rich: {}
          }},
          {
          name: '水箱温度',
          type: 'line',
          smooth: true,
          data: sxhs,
          normal: {
            fontSize: 14,
            rich: {}
          }}]
    };
    chart.setOption(option,true);
  },
  // 设备切换
  deviceArr: function(e) {
    var that = this;
    var index = e.currentTarget.dataset.index;
    that.setData({
      num: index
    })
    console.log(index, 'index');
    var num = that.data.num;
    that.run1();
  },
  bindPickerChange(e) {
    console.log('picker发送选择改变，携带值为', e.detail.value)
    this.setData({
      index: e.detail.value
    })
  },
  // 表单提交事件
  formSubmit0: function(e) {
    console.log('form发生了submit事件，携带数据为：', e.detail.value)
  },
  formSubmit1: function(e) {
    this.setting();
    
    console.log('form发生了submit事件，携带数据为：', e.detail.value)
  },
  formSubmit2: function(e) {
    console.log('form发生了submit事件，携带数据为：', e.detail.value)
  },
  formSubmit3: function(e) {
    console.log('form发生了submit事件，携带数据为：', e.detail.value)
  },
  formSubmit4: function(e) {
    console.log('form发生了submit事件，携带数据为：', e.detail.value)
  },
  formSubmit5(e) {
    console.log('form发生了submit事件，携带数据为5：', e.detail.value)
  },
  formTime(e) {
    console.log('form发生了submit事件，携带数据为：', e.detail.value)
  },
  formTime1(e) {
    console.log('form发生了submit事件，携带数据为：', e.detail.value)
  },
  switch2Change: function(e) {
    console.log('switch2 发生 change 事件，携带值为', e.detail.value)
  },
  // 温度图表接口
  chartList:function(){
    var that = this;
    var uuid = that.data.uuid;
    var date = that.data.date;
    wx.request({
      url: app.globalData.url + '/receptionMessage/findByTemp?imei=' + uuid + '&&recevie_date=' + date,
      data: '',
      header: app.globalData.header,
      method: 'POST',
      dataType: 'json',
      responseType: 'text',
      success: function (res) {
       // console.log('水箱温度', res.data.data)
        that.setData({
          chartList: res.data.data
        })
        var chartList = that.data.chartList;
        csTemp = [], sxTemp=[], hsTemp=[], hjTemp=[], tempTime=[];
        for (var i = 0; i < chartList.length;i++){
          let date = chartList[i][4].substring(11, chartList[i][4].length - 3)
          csTemp.push(chartList[i][1])
          hjTemp.push(chartList[i][2])
          tempTime.push(date)
// 判断运行模式为单热水、制热制冷
          if (that.data.dataArr[0].runnmodel == 0){
             sxhs.push(chartList[i][0])
          }
          if (that.data.dataArr[0].runnmodel == 1){
            sxhs.push(chartList[i][3])
          }
          if (that.data.dataArr[0].runnmodel == 2) {
            sxhs.push(chartList[i][3])
          }
        }
       
        // console.log('出水', csTemp, sxTemp, hsTemp, hjTemp, tempTime)
        // console.log('水箱', that.data.sxTemp)
        // console.log('回水', that.data.hsTemp)
        // console.log('环境', tempTime)
        that.test();
      },
      fail: function (res) { },
      complete: function (res) { },
    })
  },
  // 参数设置接口
  //  {{ dataArr[0].runnmodel == 0 ? '单热水' : (dataArr[0].runnmodel == 1 ? '单制热' : (dataArr[0].runnmodel == 2 ? '单制冷' : '未知')) }}
  setting:function(){
    
  },
  // 水箱温度
  // totalTem: function() {
  // },
  // 进水温度
  // leaveTem: function() {
 
  // },

  // 出水温度
  interTem: function() {
    var that = this;
    that.chartList();
    that.setData({
      isHided2: true
    })
  },
  
  // 环境温度
  // ambTem: function() {
  
  // },
  // 添加定时
  addTime: function(e) {
    var index = e.currentTarget.dataset.index;
    var that = this;
    var onTime = that.data.addTime;
    let onTimeOne = [];
    onTimeOne.push(onTime[0]);
    onTime.push(onTimeOne[0]);
    if (onTime.length < 6) {
      that.setData({
        addTime: onTime,
        keys: onTimeOne.length
      })
    } else {
      wx.showToast({
        title: '最多定时5个阶段',
      })
    }
  },

  // 删除
  del: function(e) {
    var that = this;
    wx.showModal({
      title: '提示',
      content: '删除该阶段定时？',
      success: function(res) {
        if (res.confirm) {
          var addTime = that.data.addTime;
          var index = e.currentTarget.dataset.index;
          // console.log('index', index);
          addTime.splice(e.currentTarget.dataset.index, 1);
          that.setData({
            addTime: addTime
          })
        } else {
          console.log('用户点击取消')
        }
      }
    })
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function(options) {
    var that = this;
    // 获取当前时间
    var dated = util.formatDate(new Date());
    console.log(dated, 'formatDate')
    this.setData({
      date: dated
    });
    //  高度自适应
    wx.getSystemInfo({
      success: function(res) {
        var clientHeight = res.windowHeight,
          clientWidth = res.windowWidth,
          rpxR = 750 / clientWidth;
        var calc = clientHeight * rpxR;
        console.log(calc)
        that.setData({
          winHeight: calc
        });
      }
    });
    var userList = wx.getStorageSync('userList')
    //console.log('userList', userList)
    var id = userList.user.data.currentUser.id;
    //console.log('userList.user.data.sessionId', userList.user.data.sessionId)
    app.globalData.header.Cookie = 'JSESSIONID=' + userList.user.data.sessionId;
    //console.log('app.globalData.header.Cookie', app.globalData.header)
    // 设备查询
    wx.request({
      url: app.globalData.url + '/equipment/findByuserId?userId=' + id,
      data: '',
      header: app.globalData.header,
      method: 'POST',
      fail: function (res) {
        console.log('fail')
      },
      success: function (res) {
      console.log('登录成功',res)
        that.setData({
          deviceArr: res.data.data
        })
        that.run1();
        that.chartList();
      },
      complete: function (res) { },
    })
  },
  // 默认第一个接口
  run1:function(){
    var that = this;
    var deviceArr = that.data.deviceArr;
    //console.log(res.data.data[currentData][0])
    that.setData({
      uuid: deviceArr[0][0]
    })
    that.setData({
      setName: deviceArr[0][1]
    })
    // console.log('deviceArr[0][1]', deviceArr[0][1])
    // console.log('setName', that.data.setName)
    //  console.log('设备查询', res)
    // console.log('success')
    var uuid = that.data.uuid;
    //console.log(uuid, 'uuid')
    var setName = that.data.setName;
    wx.request({
      url: app.globalData.url + '/receptionMessage/findByImei?imei=' + uuid,
      data: '',
      header: app.globalData.header,
      method: 'POST',
      dataType: 'json',
      responseType: 'text',
      success: function (res) {
        console.log('运行状态设备',res);
        // console.log(res.data.data);
        var dataArr = res.data.data
        // 运行状态赋值
        that.setData({
          dataArr: dataArr
        })
        console.log(that.data.dataArr, 'that.data.dataArr')
        // that.setData({
        //   isHide: false
        // })
      },
      fail: function (res) { },
      complete: function (res) { },
    })
  },
  //获取当前滑块的index
  bindchange: function(e) {
    const that = this;
    that.setData({
      currentData: e.detail.current
    })
  },
  //点击切换，滑块index赋值
  checkCurrent: function(e) {
    const that = this;
    if (that.data.currentData === e.target.dataset.current) {
      return false;
    } else {
      that.setData({
        currentData: e.target.dataset.current
      })
    }
    var currentData = that.data.currentData;
    // 运行状态
    if (currentData == 0) {

    }
    if (currentData == 1) {
    
    }
    // 系统定时
    if (currentData == 2) {
      console.log(222)
    }
  },
  // 开机选择
  bindPickerChange1(e) {
    var that = this;
    console.log('picker发送选择改变，携带值为', e.detail.value)
    that.setData({
      [that.data.bitData[0].scope]: e.detail.value
    })
    
    //console.log('that.data.dataArr', that.data.dataArr[0].unitaddr)
    var unitIp = that.data.dataArr[0].unitaddr;
    //console.log('unitIp', unitIp)
    //var scope='';
    var type;
    if (that.data.dataArr[0].runnmodel == 0) {
      type = 'L1'
    }
    if (that.data.dataArr[0].runnmodel == 1) {
      type = 'L3'
    }
    if (that.data.dataArr[0].runnmodel == 2) {
      type = 'L5'
    }
    wx.request({
      url: app.globalData.url + '/send/sendMainboard?unitIp=' + unitIp + '&&type=' + type + '&&param=' + that.data.bitData[0].scope,
      data: {
      },
      header: app.globalData.header,
      method: 'POST',
      dataType: 'json',
      responseType: 'text',
      success: function (res) {
        console.log('参数设置', res)
        wx.showToast({
          icon: 'none',
          title: res.data.data.success,
        })
      },
      fail: function (res) { },
      complete: function (res) { },
    })

  },
  // 运行选择
  bindPickerChange2(e) {
    console.log('picker发送选择改变，携带值为', e.detail.value)
    this.setData({
      key: e.detail.value
    })
  },
  //模式设置
  modeChange(e) {
    var that = this;
    // 最外层下标
    var ind = e.detail.value;
    // 模式下标
    var index = e.currentTarget.dataset.a;
    console.log(index, this.data.mode[ind]);
    var data = 'key1[' + index + ']';
    console.log(data);
    that.setData({
      [data]: this.data.mode[ind]
    })
    console.log(this.data.key1);
  },
  //温度设置
  temChange(e) {
    var that = this;
    var ind = e.detail.value;
    var index = e.currentTarget.dataset.b;
    var data = 'key2[' + index + ']';
    that.setData({
      [data]: this.data.tem[ind]
    })
  },
  //水位选择
  waterChange(e) {
    var that = this;
    var ind = e.detail.value;
    var index = e.currentTarget.dataset.c;
    var data = 'key3[' + index + ']';
    that.setData({
      [data]: this.data.water[ind]
    })
  },
  // 时间选择
  bindTimeChange(e) {
    var that = this;
    var ind = e.detail.value;
    console.log(e)
    var index = e.currentTarget.dataset.d;
    console.log(index, 'index')
    var data = 'time[' + index + ']';
    that.setData({
      [data]: ind
    })
  },
  bindTimeChange1(e) {
    var that = this;
    var ind = e.detail.value;
    console.log(e)
    var index = e.currentTarget.dataset.e;
    console.log(index, 'index')
    var data = 'time1[' + index + ']';
    that.setData({
      [data]: ind
    })
    // console.log('picker发送选择改变，携带值为', e.detail.value)
    // this.setData({
    //   time1: e.detail.value
    // })
  },
  bindPickerChange5(e) {
    console.log('picker发送选择改变，携带值为', e.detail.value)
    this.setData({
      key3: e.detail.value
    })
  },
  //水箱温度选择时间
  bindDateChange: function(e) {
    var that = this;
    console.log('picker发送选择改变，携带值为', e.detail.value)
    this.setData({
      date: e.detail.value
    })
    that.chartList();
  },
  // 查看更多设备
  more: function() {
    var that = this;
    that.setData({
      isHide: true
    })
  },
  back: function() {
    var that = this;
    that.setData({
      isHide: false
    })
    that.setData({
      isHided: false
    })
    that.setData({
      isHided1: false
    })
    that.setData({
      isHided2: false
    })
    that.setData({
      isHided3: false
    })
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function() {
    var that = this;
    // 默认为运行状态
    
  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function() {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function() {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function() {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function() {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function() {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function() {

  },
 
})